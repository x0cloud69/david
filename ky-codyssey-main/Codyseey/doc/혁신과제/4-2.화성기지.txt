########################################################
문제 1. Mars 기지 적재물 관리 및 위험 분석
########################################################
수행 과제
Mars_Base_Inventory_List.csv의 내용을 읽어서 화면에 출력한다.
CSV의 각 항목(콤마로 구분)을 파싱하여 Python List 객체로 변환한다.
리스트를 인화성 지수(flammability index)를 기준으로 내림차순 정렬한다.
인화성 지수가 0.7 이상인 항목만 필터링하여 별도로 출력한다.
해당 필터링 결과를 Mars_Base_Inventory_danger.csv로 CSV 형식 저장한다.

보너스 과제
정렬된 배열을 이진 파일(Mars_Base_Inventory_List.bin) 형식으로 저장한다.
저장한 이진 파일을 다시 읽어서 내용을 출력한다.
텍스트 파일과 이진 파일의 차이점과 장단점을 설명할 수 있도록 정리한다.

########################################################
문제 2. Mars 돔 구조물 설계 프로그램
########################################################
수행 과제
반구체 돔의 표면적과 무게를 계산하는 함수 sphere_area()를 정의한다.
함수는 다음 파라미터를 가진다:
diameter (단위: m)
material: 유리(glass), 알루미늄(aluminum), 탄소강(carbon_steel)
thickness: 기본값 1cm
지름과 재질은 input()을 통해 사용자로부터 입력받는다.
재질의 밀도 (g/cm³)
유리: 2.4
알루미늄: 2.7
탄소강: 7.85
결과 출력 시:
면적은 소수점 3자리까지
무게는 **화성 중력(지구 중력의 약 0.38배)**을 반영하여 출력
전역 변수 저장 및 다음 형식으로 출력:
재질 ⇒ 유리, 지름 ⇒ 10, 두께 ⇒ 1, 면적 ⇒ 314.159, 무게 ⇒ 500.987 kg
프로그램은 반복 실행되어야 하며, 종료 조건도 구현되어야 한다.
잘못된 입력(예: 지름이 0이거나 숫자가 아님)에 대해 예외 처리가 되어 있어야 한다.
저장 파일
코드 파일은 반드시 design_dome.py로 저장

보너스 과제
-------------------------------------------------------------
material, diameter, thickness 파라미터에 유효하지 않은 값이 들어왔을 때 예외 처리가 되어 있어야 한다.

########################################################
문제 3. Mars 부품 데이터 통합 분석 (NumPy 활용)
########################################################
수행 과제
다음 세 개의 CSV 파일을 NumPy로 읽어 각각 arr1, arr2, arr3 배열로 만든다:
mars_base_main_parts-001.csv
mars_base_main_parts-002.csv
mars_base_main_parts-003.csv
세 배열을 병합하여 parts라는 ndarray 생성
parts를 이용하여 항목별 평균값 계산
평균값이 50보다 작은 항목만 필터링하여 parts_to_work_on.csv로 저장
저장 시 반드시 예외 처리를 수행할 것

보너스 과제
-------------------------------------------------
parts_to_work_on.csv를 다시 읽어서 parts2로 저장
parts2를 기반으로 **전치 행렬(transpose)**을 구하여 parts3로 저장하고 출력

제약사항
Python 기본 명령어만 사용 (NumPy 제외하고 외부 패키지 금지)
모든 파일 처리에는 예외 처리 필수
sphere_area() 함수는 기본값 설정 및 입력 검증 포함
모든 출력은 소수점 이하 3자리까지 제한
결과는 지속 반복 실행이 가능해야 하며, 사용자가 원할 때 종료 가능해야 함


===============================================================================
Python과 NumPy 환경 정상 설정 여부
입력 및 출력이 명세에 맞게 동작하는지 확인
파일명, 함수명 등 과제 명세에 따른 구조 확인
PASS FAIL
2	
각각의 문제별로 함수가 명확하게 정의되어 있고, 예외 처리가 잘 되어 있는지 확인
리스트, 사전, ndarray 등 Python 기본 자료구조를 적절히 사용했는지
정렬, 필터링, 파일 저장이 명세대로 수행되는지
PASS FAIL
3	
모든 기능이 정상적으로 실행되며, 예외 상황도 적절히 처리되는지 확인
출력 형식과 소수점 자릿수 제한이 잘 지켜지는지
이진 파일 및 CSV 출력이 정상적으로 작동되는지
PASS FAIL
4	
반구체 면적, 중량 계산에 사용된 수학적 근거 설명
재질별 밀도 차이와 구조물 설계 시 고려 요소 설명
텍스트와 바이너리 파일의 차이점 및 각각의 활용 예
NumPy 배열의 특징과 전치 행렬의 의미
PASS FAIL
5	보너스 점수 부여 (20)